import time
import datetime
import argparse

def generate_bad_requests(minutes, frequency=1):
    start_time = datetime.datetime.now()
    end_time = start_time + datetime.timedelta(minutes=minutes)

    while datetime.datetime.now() < end_time:
        current_time = datetime.datetime.now().strftime("%Y-%m-%dT%H:%M:%S.%f")[:-3] + "+00:00"
        print(f'{{"timestamp":"{current_time}","status":400,"error":"Bad Request","path":"/v3/completions"}}')
        time.sleep(60 / frequency)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Generate bad request logs.')
    parser.add_argument('minutes', type=int, help='Number of minutes to generate logs for')
    parser.add_argument('--frequency', type=int, default=1, help='Frequency of the requests (default: 1)')
    args = parser.parse_args()

    generate_bad_requests(args.minutes, args.frequency)


python generate_bad_requests.py <minutes> [--frequency=<frequency>]
